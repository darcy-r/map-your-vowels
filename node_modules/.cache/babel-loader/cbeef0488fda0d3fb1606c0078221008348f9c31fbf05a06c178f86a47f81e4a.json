{"ast":null,"code":"var _jsxFileName = \"/Users/darcyroche/Documents/GitHub/map-your-vowels/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState, React } from 'react';\nimport Accordion from 'react-bootstrap/Accordion';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport ScatterPlot from './Plot.js';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst chartData = {\n  \"Australian English 1991-1994\": [{\n    \"elicitation\": \"heed\",\n    \"f1\": 320,\n    \"f2\": 2360,\n    \"description\": \"iː\",\n    \"dataset\": \"reference\"\n  }, {\n    \"elicitation\": \"hid\",\n    \"f1\": 330,\n    \"f2\": 2350,\n    \"description\": \"ɪ\",\n    \"dataset\": \"reference\"\n  }, {\n    \"elicitation\": \"hair\",\n    \"f1\": 450,\n    \"f2\": 2100,\n    \"description\": \"eː\",\n    \"dataset\": \"reference\"\n  }, {\n    \"elicitation\": \"head\",\n    \"f1\": 470,\n    \"f2\": 2090,\n    \"description\": \"e\",\n    \"dataset\": \"reference\"\n  }, {\n    \"elicitation\": \"had\",\n    \"f1\": 690,\n    \"f2\": 1760,\n    \"description\": \"æ\",\n    \"dataset\": \"reference\"\n  }, {\n    \"elicitation\": \"hard\",\n    \"f1\": 760,\n    \"f2\": 1350,\n    \"description\": \"ɐː\",\n    \"dataset\": \"reference\"\n  }, {\n    \"elicitation\": \"hud\",\n    \"f1\": 740,\n    \"f2\": 1390,\n    \"description\": \"ɐ\",\n    \"dataset\": \"reference\"\n  }, {\n    \"elicitation\": \"hod\",\n    \"f1\": 580,\n    \"f2\": 1040,\n    \"description\": \"ɔ\",\n    \"dataset\": \"reference\"\n  }, {\n    \"elicitation\": \"horde\",\n    \"f1\": 440,\n    \"f2\": 850,\n    \"description\": \"oː\",\n    \"dataset\": \"reference\"\n  }, {\n    \"elicitation\": \"hood\",\n    \"f1\": 380,\n    \"f2\": 950,\n    \"description\": \"ʊ\",\n    \"dataset\": \"reference\"\n  }, {\n    \"elicitation\": \"who'd\",\n    \"f1\": 340,\n    \"f2\": 1800,\n    \"description\": \"ʉ\",\n    \"dataset\": \"reference\"\n  }, {\n    \"elicitation\": \"herd\",\n    \"f1\": 470,\n    \"f2\": 1640,\n    \"description\": \"ɜː\",\n    \"dataset\": \"reference\"\n  }]\n};\n\n// const diphthongs = {\n//   \"Australian English 1991-1994\" : [\n//     {\"elicitation\" : \"hoyed\", \"f1\" : , \"f2\" : , \"description\" : \"oɪ\", \"dataset\" : \"reference\"},\n//     {\"elicitation\" : \"hide\", \"f1\" : , \"f2\" : , \"description\" : \"ɑɪ\", \"dataset\" : \"reference\"},\n//     {\"elicitation\" : \"hayed\", \"f1\" : , \"f2\" : , \"description\" : \"æɪ\", \"dataset\" : \"reference\"},\n//     {\"elicitation\" : \"hoed\", \"f1\" : , \"f2\" : , \"description\" : \"əʉ\", \"dataset\" : \"reference\"},\n//     {\"elicitation\" : \"how'd\", \"f1\" : , \"f2\" : , \"description\" : \"æɔ\", \"dataset\" : \"reference\"}\n//   ]\n// }\n\nconst elicitations = [\"heed\", \"hid\", \"head\", \"haired\", \"had\", \"who'd\", \"heard\", \"hud\", \"hard\", \"hood\", \"hoard\", \"hod\"];\nconst diphthongElicitations = [\"hoyed\", \"hide\", \"hayed\", \"hoed\", \"how'd\"];\nfunction reshapeUserData(userFormantValues) {\n  let userChartData = [];\n  for (let elicitation in userFormantValues) {\n    if (userFormantValues[elicitation][\"f1\"] && userFormantValues[elicitation][\"f2\"]) {\n      userChartData.push({\n        \"elicitation\": elicitation,\n        \"f1\": parseFloat(userFormantValues[elicitation][\"f1\"]),\n        \"f2\": parseFloat(userFormantValues[elicitation][\"f2\"]),\n        \"dataset\": \"user input\"\n      });\n    }\n  }\n  return userChartData;\n}\n\n// define maths components\nconst e = Math.exp(1);\nfunction antilog(n) {\n  let base = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : e;\n  if (base === e) return Math.exp(n);\n  return Math.pow(base, n);\n}\nfunction average(inputArray) {\n  return inputArray.reduce((a, b) => a + b, 0) / inputArray.length;\n}\nfunction standardDeviation(array) {\n  const n = array.length;\n  const mean = array.reduce((a, b) => a + b) / n;\n  return Math.sqrt(array.map(x => Math.pow(x - mean, 2)).reduce((a, b) => a + b) / n);\n}\nfunction normaliseFormantNearey1(formant, meanFormant) {\n  return antilog(Math.log(formant)) - meanFormant;\n}\nfunction normaliseFormantLobanov(formant, meanFormant, stdDevFormant) {\n  return (formant - meanFormant) / stdDevFormant;\n}\nfunction normaliseFormant(method, formant, meanFormant, stdDevFormant) {\n  switch (method) {\n    case \"Lobanov\":\n      normaliseFormantLobanov(formant, meanFormant, stdDevFormant);\n      break;\n    case \"Nearey 1\":\n      normaliseFormantNearey1(formant, meanFormant);\n      break;\n  }\n}\nfunction normaliseDataset(dataset, method) {\n  if (method == \"none\") {\n    return dataset;\n  }\n  const f1s = dataset.map(row => row[\"f1\"]);\n  const f2s = dataset.map(row => row[\"f2\"]);\n  const meanF1 = average(f1s);\n  const meanF2 = average(f2s);\n  let stdDevF1;\n  let stdDevF2;\n  if (method == \"Lobanov\") {\n    stdDevF1 = standardDeviation(f1s);\n    stdDevF2 = standardDeviation(f2s);\n  }\n  for (let i = 0; i < dataset.length; i++) {\n    dataset[i][\"normalisedF1\"] = normaliseFormant(method, dataset[i][\"f1\"], meanF1, stdDevF1);\n    dataset[i][\"normalisedF2\"] = normaliseFormant(method, dataset[i][\"f2\"], meanF2, stdDevF2);\n  }\n  return dataset;\n}\n\n// class App extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     // TODO: generate for all words in const array elicitations\n//     this.state = {\n//       formantValues: elicitations.reduce((o, key) => ({ ...o, [key]: {\"f1\" : \"\", \"f2\" : \"\"}}), {}),\n//       selectedReferenceDataset: \"Australian English 1991-1994\",\n//       normalisationMethod: \"none\",\n//     };\n//     this.handleChange = this.handleChange.bind(this);\n//   }\n//\n//   handleChange(elicitation, formant, value) {\n//     // update formant values\n//     let updateObj = this.state.formantValues;\n//     updateObj[elicitation][formant] = value;\n//     this.setState({formantValues : updateObj});\n//     // add any\n//   }\n//\n//   handleNormalisationSelection(selectedNormalisationMethod) {\n//     this.setState({normalisationMethod: selectedNormalisationMethod});\n//   }\n//\n//   handleReferenceDataSelection(referenceDataset) {\n//     this.setState({selectedReferenceDataset: referenceDataset});\n//   }\n//\n//   render() {\n//     return (\n//       <div className=\"App\">\n//         <div id=\"visualisation-pane\">\n//           <div id=\"visualisation-pane-content\">\n//             <ScatterPlot data={normaliseDataset(chartData[this.state.selectedReferenceDataset]).concat(normaliseDataset(reshapeUserData(this.state.formantValues)))} />\n//           </div>\n//         </div>\n//         <div className=\"formant-form-container\">\n//           <NormalisationSelector changeHandler={e => this.handleNormalisationSelection(e)}/>\n//           <DatasetSelector changeHandler={e => this.handleReferenceDataSelection(e)}/>\n//           <FormantForm changeHandler={(e, f, v) => this.handleChange(e, f, v)}/>\n//         </div>\n//       </div>\n//     );\n//   }\n// }\n\nfunction App() {\n  _s();\n  const [formantValues, setFormantValues] = useState(elicitations.reduce((o, key) => ({\n    ...o,\n    [key]: {\n      \"f1\": \"\",\n      \"f2\": \"\"\n    }\n  }), {}));\n  const [referenceDataset, setReferenceDataset] = useState(\"Australian English 1991-1994\");\n  const [normalisationMethod, setNormalisationMethod] = useState(\"none\");\n  function handleChange(elicitation, formant, value) {\n    let updateObj = formantValues;\n    updateObj[elicitation][formant] = value;\n    setFormantValues(updateObj);\n  }\n  function handleNormalisationSelection(selectedNormalisationMethod) {\n    setNormalisationMethod(selectedNormalisationMethod);\n  }\n  function handleReferenceDataSelection(referenceDataset) {\n    console.log(\"handleReferenceDataSelection called\");\n    setReferenceDataset(referenceDataset);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"visualisation-pane\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"visualisation-pane-content\",\n        children: /*#__PURE__*/_jsxDEV(ScatterPlot, {\n          data: normaliseDataset(chartData[referenceDataset], normalisationMethod).concat(normaliseDataset(reshapeUserData(formantValues), normalisationMethod))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"formant-form-container\",\n      children: [/*#__PURE__*/_jsxDEV(NormalisationSelector, {\n        changeHandler: handleNormalisationSelection\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DatasetSelector, {\n        changeHandler: handleReferenceDataSelection\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormantForm, {\n        changeHandler: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 187,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"cmYbEoxw9D+15YYe7RShRfUENdE=\");\n_c = App;\nfunction NormalisationSelector(_ref) {\n  let {\n    changeHandler\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Dropdown, {\n    className: \"dataset-selector\",\n    onSelect: changeHandler,\n    children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n      variant: \"success\",\n      id: \"dropdown-basic\",\n      children: \"Normalisation method\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n      children: [/*#__PURE__*/_jsxDEV(Dropdown.Item, {\n        eventKey: \"none\",\n        children: \"none\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n        eventKey: \"Nearey 1\",\n        children: \"Nearey 1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n        eventKey: \"Lobanov\",\n        children: \"Lobanov\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 204,\n    columnNumber: 5\n  }, this);\n}\n_c2 = NormalisationSelector;\nfunction DatasetSelector(_ref2) {\n  let {\n    changeHandler\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(Dropdown, {\n    className: \"dataset-selector\",\n    onSelect: changeHandler,\n    children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n      variant: \"success\",\n      id: \"dropdown-basic\",\n      children: \"Reference dataset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n      children: [/*#__PURE__*/_jsxDEV(Dropdown.Item, {\n        eventKey: \"Australian English 1991-1994\",\n        children: \"Australian English 1991-1994\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n        eventKey: \"Australian English 196?\",\n        children: \"Australian English 196?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 219,\n    columnNumber: 5\n  }, this);\n}\n_c3 = DatasetSelector;\nfunction FormantForm(props) {\n  return /*#__PURE__*/_jsxDEV(Accordion, {\n    className: \"formant-form\",\n    children: elicitations.map((e, i) => /*#__PURE__*/_jsxDEV(FormantInput, {\n      indexNumber: i,\n      elicitation: e,\n      formOnChange: (e, f, v) => props.changeHandler(e, f, v)\n    }, e, false, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 36\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 233,\n    columnNumber: 5\n  }, this);\n}\n_c4 = FormantForm;\nfunction FormantInput(props) {\n  return /*#__PURE__*/_jsxDEV(Accordion.Item, {\n    eventKey: props.indexNumber,\n    children: [/*#__PURE__*/_jsxDEV(Accordion.Header, {\n      children: [\"\\\"\", props.elicitation, \"\\\" vowel\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Accordion.Body, {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"F1: \", /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"f1Input\",\n          type: \"number\",\n          onChange: e => props.formOnChange(props.elicitation, \"f1\", e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"F2: \", /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"f2Input\",\n          type: \"number\",\n          onChange: e => props.formOnChange(props.elicitation, \"f2\", e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 243,\n    columnNumber: 5\n  }, this);\n}\n_c5 = FormantInput;\nexport default App;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"NormalisationSelector\");\n$RefreshReg$(_c3, \"DatasetSelector\");\n$RefreshReg$(_c4, \"FormantForm\");\n$RefreshReg$(_c5, \"FormantInput\");","map":{"version":3,"names":["useState","React","Accordion","Dropdown","ScatterPlot","jsxDEV","_jsxDEV","chartData","elicitations","diphthongElicitations","reshapeUserData","userFormantValues","userChartData","elicitation","push","parseFloat","e","Math","exp","antilog","n","base","arguments","length","undefined","pow","average","inputArray","reduce","a","b","standardDeviation","array","mean","sqrt","map","x","normaliseFormantNearey1","formant","meanFormant","log","normaliseFormantLobanov","stdDevFormant","normaliseFormant","method","normaliseDataset","dataset","f1s","row","f2s","meanF1","meanF2","stdDevF1","stdDevF2","i","App","_s","formantValues","setFormantValues","o","key","referenceDataset","setReferenceDataset","normalisationMethod","setNormalisationMethod","handleChange","value","updateObj","handleNormalisationSelection","selectedNormalisationMethod","handleReferenceDataSelection","console","className","children","id","data","concat","fileName","_jsxFileName","lineNumber","columnNumber","NormalisationSelector","changeHandler","DatasetSelector","FormantForm","_c","_ref","onSelect","Toggle","variant","Menu","Item","eventKey","_c2","_ref2","_c3","props","FormantInput","indexNumber","formOnChange","f","v","_c4","Header","Body","name","type","onChange","target","_c5","$RefreshReg$"],"sources":["/Users/darcyroche/Documents/GitHub/map-your-vowels/src/App.js"],"sourcesContent":["import { useState, React} from 'react';\nimport Accordion from 'react-bootstrap/Accordion';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport ScatterPlot from './Plot.js';\n\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst chartData = {\n  \"Australian English 1991-1994\" : [\n    {\"elicitation\" : \"heed\", \"f1\" : 320, \"f2\" : 2360, \"description\" : \"iː\", \"dataset\" : \"reference\"},\n    {\"elicitation\" : \"hid\", \"f1\" : 330, \"f2\" : 2350, \"description\" : \"ɪ\", \"dataset\" : \"reference\"},\n    {\"elicitation\" : \"hair\", \"f1\" : 450, \"f2\" : 2100, \"description\" : \"eː\", \"dataset\" : \"reference\"},\n    {\"elicitation\" : \"head\", \"f1\" : 470, \"f2\" : 2090, \"description\" : \"e\", \"dataset\" : \"reference\"},\n    {\"elicitation\" : \"had\", \"f1\" : 690, \"f2\" : 1760, \"description\" : \"æ\", \"dataset\" : \"reference\"},\n    {\"elicitation\" : \"hard\", \"f1\" : 760, \"f2\" : 1350, \"description\" : \"ɐː\", \"dataset\" : \"reference\"},\n    {\"elicitation\" : \"hud\", \"f1\" : 740, \"f2\" : 1390, \"description\" : \"ɐ\", \"dataset\" : \"reference\"},\n    {\"elicitation\" : \"hod\", \"f1\" : 580, \"f2\" : 1040, \"description\" : \"ɔ\", \"dataset\" : \"reference\"},\n    {\"elicitation\" : \"horde\", \"f1\" : 440, \"f2\" : 850, \"description\" : \"oː\", \"dataset\" : \"reference\"},\n    {\"elicitation\" : \"hood\", \"f1\" : 380, \"f2\" : 950, \"description\" : \"ʊ\", \"dataset\" : \"reference\"},\n    {\"elicitation\" : \"who'd\", \"f1\" : 340, \"f2\" : 1800, \"description\" : \"ʉ\", \"dataset\" : \"reference\"},\n    {\"elicitation\" : \"herd\", \"f1\" : 470, \"f2\" : 1640, \"description\" : \"ɜː\", \"dataset\" : \"reference\"}\n  ]\n}\n\n// const diphthongs = {\n//   \"Australian English 1991-1994\" : [\n//     {\"elicitation\" : \"hoyed\", \"f1\" : , \"f2\" : , \"description\" : \"oɪ\", \"dataset\" : \"reference\"},\n//     {\"elicitation\" : \"hide\", \"f1\" : , \"f2\" : , \"description\" : \"ɑɪ\", \"dataset\" : \"reference\"},\n//     {\"elicitation\" : \"hayed\", \"f1\" : , \"f2\" : , \"description\" : \"æɪ\", \"dataset\" : \"reference\"},\n//     {\"elicitation\" : \"hoed\", \"f1\" : , \"f2\" : , \"description\" : \"əʉ\", \"dataset\" : \"reference\"},\n//     {\"elicitation\" : \"how'd\", \"f1\" : , \"f2\" : , \"description\" : \"æɔ\", \"dataset\" : \"reference\"}\n//   ]\n// }\n\nconst elicitations = [\n  \"heed\", \"hid\", \"head\", \"haired\", \"had\", \"who'd\", \"heard\", \"hud\", \"hard\",\n  \"hood\", \"hoard\", \"hod\"\n]\n\nconst diphthongElicitations = [\n  \"hoyed\", \"hide\", \"hayed\", \"hoed\", \"how'd\"\n]\n\nfunction reshapeUserData(userFormantValues) {\n  let userChartData = [];\n  for (let elicitation in userFormantValues) {\n    if (userFormantValues[elicitation][\"f1\"] && userFormantValues[elicitation][\"f2\"]) {\n      userChartData.push({\n        \"elicitation\" : elicitation,\n        \"f1\" : parseFloat(userFormantValues[elicitation][\"f1\"]),\n        \"f2\" : parseFloat(userFormantValues[elicitation][\"f2\"]),\n        \"dataset\" : \"user input\"\n      });\n    }\n  }\n  return userChartData\n}\n\n// define maths components\nconst e = Math.exp(1)\n\nfunction antilog(n, base = e) {\n  if (base === e) return Math.exp(n);\n  return Math.pow(base, n);\n}\n\nfunction average(inputArray) {\n  return inputArray.reduce((a, b) => a + b, 0) / inputArray.length;\n}\n\nfunction standardDeviation (array) {\n  const n = array.length;\n  const mean = array.reduce((a, b) => a + b) / n;\n  return Math.sqrt(array.map(x => Math.pow(x - mean, 2)).reduce((a, b) => a + b) / n);\n}\n\nfunction normaliseFormantNearey1(formant, meanFormant) {\n  return antilog(Math.log(formant)) - meanFormant;\n}\n\nfunction normaliseFormantLobanov(formant, meanFormant, stdDevFormant) {\n  return (formant - meanFormant) / stdDevFormant;\n}\n\nfunction normaliseFormant(method, formant, meanFormant, stdDevFormant) {\n  switch (method) {\n    case \"Lobanov\":\n      normaliseFormantLobanov(formant, meanFormant, stdDevFormant);\n      break;\n    case \"Nearey 1\":\n      normaliseFormantNearey1(formant, meanFormant);\n      break;\n  }\n}\n\nfunction normaliseDataset(dataset, method) {\n  if (method == \"none\") {\n    return dataset;\n  }\n  const f1s = dataset.map(row => row[\"f1\"]);\n  const f2s = dataset.map(row => row[\"f2\"]);\n  const meanF1 = average(f1s);\n  const meanF2 = average(f2s);\n  let stdDevF1;\n  let stdDevF2;\n  if (method == \"Lobanov\") {\n    stdDevF1 = standardDeviation(f1s);\n    stdDevF2 = standardDeviation(f2s);\n  }\n  for (let i = 0; i < dataset.length; i++) {\n    dataset[i][\"normalisedF1\"] = normaliseFormant(method, dataset[i][\"f1\"], meanF1, stdDevF1);\n    dataset[i][\"normalisedF2\"] = normaliseFormant(method, dataset[i][\"f2\"], meanF2, stdDevF2);\n  }\n  return dataset;\n}\n\n// class App extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     // TODO: generate for all words in const array elicitations\n//     this.state = {\n//       formantValues: elicitations.reduce((o, key) => ({ ...o, [key]: {\"f1\" : \"\", \"f2\" : \"\"}}), {}),\n//       selectedReferenceDataset: \"Australian English 1991-1994\",\n//       normalisationMethod: \"none\",\n//     };\n//     this.handleChange = this.handleChange.bind(this);\n//   }\n//\n//   handleChange(elicitation, formant, value) {\n//     // update formant values\n//     let updateObj = this.state.formantValues;\n//     updateObj[elicitation][formant] = value;\n//     this.setState({formantValues : updateObj});\n//     // add any\n//   }\n//\n//   handleNormalisationSelection(selectedNormalisationMethod) {\n//     this.setState({normalisationMethod: selectedNormalisationMethod});\n//   }\n//\n//   handleReferenceDataSelection(referenceDataset) {\n//     this.setState({selectedReferenceDataset: referenceDataset});\n//   }\n//\n//   render() {\n//     return (\n//       <div className=\"App\">\n//         <div id=\"visualisation-pane\">\n//           <div id=\"visualisation-pane-content\">\n//             <ScatterPlot data={normaliseDataset(chartData[this.state.selectedReferenceDataset]).concat(normaliseDataset(reshapeUserData(this.state.formantValues)))} />\n//           </div>\n//         </div>\n//         <div className=\"formant-form-container\">\n//           <NormalisationSelector changeHandler={e => this.handleNormalisationSelection(e)}/>\n//           <DatasetSelector changeHandler={e => this.handleReferenceDataSelection(e)}/>\n//           <FormantForm changeHandler={(e, f, v) => this.handleChange(e, f, v)}/>\n//         </div>\n//       </div>\n//     );\n//   }\n// }\n\nfunction App() {\n  const [formantValues, setFormantValues] = useState(\n    elicitations.reduce((o, key) => ({ ...o, [key]: {\"f1\" : \"\", \"f2\" : \"\"}}), {})\n  );\n  const [referenceDataset, setReferenceDataset] = useState(\"Australian English 1991-1994\");\n  const [normalisationMethod, setNormalisationMethod] = useState(\"none\");\n\n  function handleChange(elicitation, formant, value) {\n    let updateObj = formantValues;\n    updateObj[elicitation][formant] = value;\n    setFormantValues(updateObj);\n  }\n\n  function handleNormalisationSelection(selectedNormalisationMethod) {\n    setNormalisationMethod(selectedNormalisationMethod);\n  }\n\n  function handleReferenceDataSelection(referenceDataset) {\n    console.log(\"handleReferenceDataSelection called\");\n    setReferenceDataset(referenceDataset);\n  }\n\n  return (\n    <div className=\"App\">\n      <div id=\"visualisation-pane\">\n        <div id=\"visualisation-pane-content\">\n          <ScatterPlot data={normaliseDataset(chartData[referenceDataset], normalisationMethod).concat(normaliseDataset(reshapeUserData(formantValues), normalisationMethod))} />\n        </div>\n      </div>\n      <div className=\"formant-form-container\">\n        <NormalisationSelector changeHandler={handleNormalisationSelection}/>\n        <DatasetSelector changeHandler={handleReferenceDataSelection}/>\n        <FormantForm changeHandler={handleChange}/>\n      </div>\n    </div>\n  );\n}\n\nfunction NormalisationSelector({ changeHandler }) {\n  return (\n    <Dropdown className=\"dataset-selector\" onSelect={changeHandler}>\n      <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n        Normalisation method\n      </Dropdown.Toggle>\n      <Dropdown.Menu>\n        <Dropdown.Item eventKey=\"none\">none</Dropdown.Item>\n        <Dropdown.Item eventKey=\"Nearey 1\">Nearey 1</Dropdown.Item>\n        <Dropdown.Item eventKey=\"Lobanov\">Lobanov</Dropdown.Item>\n      </Dropdown.Menu>\n    </Dropdown>\n  );\n}\n\nfunction DatasetSelector({ changeHandler }) {\n  return (\n    <Dropdown className=\"dataset-selector\" onSelect={changeHandler}>\n      <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n        Reference dataset\n      </Dropdown.Toggle>\n      <Dropdown.Menu>\n        <Dropdown.Item eventKey=\"Australian English 1991-1994\">Australian English 1991-1994</Dropdown.Item>\n        <Dropdown.Item eventKey=\"Australian English 196?\">Australian English 196?</Dropdown.Item>\n      </Dropdown.Menu>\n    </Dropdown>\n  );\n}\n\nfunction FormantForm(props) {\n  return (\n    <Accordion className=\"formant-form\">\n      {\n        elicitations.map((e, i) => <FormantInput key={e} indexNumber={i} elicitation={e} formOnChange={(e, f, v) => props.changeHandler(e, f, v)}/>)\n      }\n    </Accordion>\n  );\n}\n\nfunction FormantInput(props) {\n  return (\n    <Accordion.Item eventKey={props.indexNumber}>\n      <Accordion.Header>\"{props.elicitation}\" vowel</Accordion.Header>\n      <Accordion.Body>\n        <label>\n          F1: <input name=\"f1Input\" type=\"number\" onChange={e => props.formOnChange(props.elicitation, \"f1\", e.target.value)} />\n        </label>\n        <br/>\n        <label>\n          F2: <input name=\"f2Input\" type=\"number\" onChange={e => props.formOnChange(props.elicitation, \"f2\", e.target.value)}/>\n        </label>\n        <br/>\n      </Accordion.Body>\n    </Accordion.Item>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}