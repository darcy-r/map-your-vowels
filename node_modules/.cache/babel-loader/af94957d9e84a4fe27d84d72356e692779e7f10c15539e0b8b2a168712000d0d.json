{"ast":null,"code":"var _jsxFileName = \"/Users/darcyroche/Documents/GitHub/map-your-vowels/src/App.js\";\nimport React from 'react';\nimport Accordion from 'react-bootstrap/Accordion';\nimport ScatterPlot from './Plot.js';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst chartData = [{\n  \"elicitation\": \"heed\",\n  \"f1\": 310,\n  \"f2\": 1933,\n  \"dataset\": \"reference\"\n}, {\n  \"elicitation\": \"hard\",\n  \"f1\": 667,\n  \"f2\": 1056,\n  \"dataset\": \"reference\"\n}, {\n  \"elicitation\": \"hood\",\n  \"f1\": 444,\n  \"f2\": 880,\n  \"dataset\": \"reference\"\n}];\nconst elicitations = [\"heed\", \"hid\", \"head\", \"haired\", \"had\", \"who'd\", \"heard\", \"hud\", \"hard\", \"hood\", \"hoard\", \"hoyed\", \"hide\", \"hayed\", \"hoed\", \"how'd\"];\nfunction reshapeUserData(userFormantValues) {\n  let userChartData = [];\n  for (let elicitation in userFormantValues) {\n    if (userFormantValues[elicitation][\"f1\"] && userFormantValues[elicitation][\"f2\"]) {\n      userChartData.push({\n        \"elicitation\": elicitation,\n        \"f1\": parseFloat(userFormantValues[elicitation][\"f1\"]),\n        \"f2\": parseFloat(userFormantValues[elicitation][\"f2\"]),\n        \"dataset\": \"user input\"\n      });\n    }\n  }\n  return userChartData;\n}\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      formantValues: {\n        \"heed\": {\n          \"f1\": '',\n          \"f2\": ''\n        },\n        \"hard\": {\n          \"f1\": '',\n          \"f2\": ''\n        },\n        \"hoard\": {\n          \"f1\": '',\n          \"f2\": ''\n        }\n      }\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n  handleChange(elicitation, formant, value) {\n    // update formant values\n    let updateObj = this.state.formantValues;\n    updateObj[elicitation][formant] = value;\n    this.setState({\n      formantValues: updateObj\n    });\n    // add any\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"visualisation-pane\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"visualisation-pane-content\",\n          children: /*#__PURE__*/_jsxDEV(ScatterPlot, {\n            data: chartData.concat(reshapeUserData(this.state.formantValues))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(FormantForm, {\n          changeHandler: (e, f, v) => this.handleChange(e, f, v)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this);\n  }\n}\nfunction FormantForm(props) {\n  return /*#__PURE__*/_jsxDEV(Accordion, {\n    children: elicitations.map((e, i) => {\n      /*#__PURE__*/_jsxDEV(FormantInput, {\n        indexNumber: i,\n        elicitation: e,\n        formOnChange: (e, f, v) => props.changeHandler(e, f, v)\n      }, e, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n}\n_c = FormantForm;\nfunction FormantInput(props) {\n  return /*#__PURE__*/_jsxDEV(Accordion.Item, {\n    eventKey: props.indexNumber,\n    children: [/*#__PURE__*/_jsxDEV(Accordion.Header, {\n      children: [\"\\\"\", props.elicitation, \"\\\" vowel\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Accordion.Body, {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"F1: \", /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"f1Input\",\n          type: \"number\",\n          onChange: e => props.formOnChange(props.elicitation, \"f1\", e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"F2: \", /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"f2Input\",\n          type: \"number\",\n          onChange: e => props.formOnChange(props.elicitation, \"f2\", e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n}\n_c2 = FormantInput;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"FormantForm\");\n$RefreshReg$(_c2, \"FormantInput\");","map":{"version":3,"names":["React","Accordion","ScatterPlot","jsxDEV","_jsxDEV","chartData","elicitations","reshapeUserData","userFormantValues","userChartData","elicitation","push","parseFloat","App","Component","constructor","props","state","formantValues","handleChange","bind","formant","value","updateObj","setState","render","className","children","id","data","concat","fileName","_jsxFileName","lineNumber","columnNumber","FormantForm","changeHandler","e","f","v","map","i","FormantInput","indexNumber","formOnChange","_c","Item","eventKey","Header","Body","name","type","onChange","target","_c2","$RefreshReg$"],"sources":["/Users/darcyroche/Documents/GitHub/map-your-vowels/src/App.js"],"sourcesContent":["import React from 'react';\nimport Accordion from 'react-bootstrap/Accordion';\nimport ScatterPlot from './Plot.js';\n\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst chartData = [\n  {\"elicitation\" : \"heed\", \"f1\" : 310, \"f2\" : 1933, \"dataset\" : \"reference\"},\n  {\"elicitation\" : \"hard\", \"f1\" : 667, \"f2\" : 1056, \"dataset\" : \"reference\"},\n  {\"elicitation\" : \"hood\", \"f1\" : 444, \"f2\" : 880, \"dataset\" : \"reference\"},\n]\n\nconst elicitations = [\n  \"heed\", \"hid\", \"head\", \"haired\", \"had\", \"who'd\", \"heard\", \"hud\", \"hard\",\n  \"hood\", \"hoard\", \"hoyed\", \"hide\", \"hayed\", \"hoed\", \"how'd\"\n]\n\nfunction reshapeUserData(userFormantValues) {\n  let userChartData = [];\n  for (let elicitation in userFormantValues) {\n    if (userFormantValues[elicitation][\"f1\"] && userFormantValues[elicitation][\"f2\"]) {\n      userChartData.push({\n        \"elicitation\" : elicitation,\n        \"f1\" : parseFloat(userFormantValues[elicitation][\"f1\"]),\n        \"f2\" : parseFloat(userFormantValues[elicitation][\"f2\"]),\n        \"dataset\" : \"user input\"\n      });\n    }\n  }\n  return userChartData\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      formantValues: {\n        \"heed\" : {\n          \"f1\" : '',\n          \"f2\" : ''\n        },\n        \"hard\" : {\n          \"f1\" : '',\n          \"f2\" : ''\n        },\n        \"hoard\" : {\n          \"f1\" : '',\n          \"f2\" : ''\n        }\n      }\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(elicitation, formant, value) {\n    // update formant values\n    let updateObj = this.state.formantValues;\n    updateObj[elicitation][formant] = value;\n    this.setState({formantValues : updateObj});\n    // add any\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div id=\"visualisation-pane\">\n          <div id=\"visualisation-pane-content\">\n            <ScatterPlot data={chartData.concat(reshapeUserData(this.state.formantValues))} />\n          </div>\n        </div>\n        <div>\n          <FormantForm changeHandler={(e, f, v) => this.handleChange(e, f, v)}/>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction FormantForm(props) {\n  return (\n    <Accordion>\n      {\n        elicitations.map((e, i) => {\n          <FormantInput key={e} indexNumber={i} elicitation={e} formOnChange={(e, f, v) => props.changeHandler(e, f, v)}/>\n        })\n      }\n    </Accordion>\n  );\n}\n\nfunction FormantInput(props) {\n  return (\n    <Accordion.Item eventKey={props.indexNumber}>\n      <Accordion.Header>\"{props.elicitation}\" vowel</Accordion.Header>\n      <Accordion.Body>\n        <label>\n          F1: <input name=\"f1Input\" type=\"number\" onChange={e => props.formOnChange(props.elicitation, \"f1\", e.target.value)} />\n        </label>\n        <br/>\n        <label>\n          F2: <input name=\"f2Input\" type=\"number\" onChange={e => props.formOnChange(props.elicitation, \"f2\", e.target.value)}/>\n        </label>\n        <br/>\n      </Accordion.Body>\n    </Accordion.Item>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}