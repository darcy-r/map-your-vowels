{"ast":null,"code":"var _jsxFileName = \"/Users/darcyroche/Documents/GitHub/map-your-vowels/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState, React } from 'react';\nimport Accordion from 'react-bootstrap/Accordion';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Form from 'react-bootstrap/Form';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport ScatterPlot from './Plot.js';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst chartData = {\n  \"none\": [],\n  \"Australian English 1991-1994\": [{\n    \"elicitation\": \"heed\",\n    \"f1\": 320,\n    \"f2\": 2360,\n    \"description\": \"iː\",\n    \"dataset\": \"reference\"\n  }, {\n    \"elicitation\": \"hid\",\n    \"f1\": 330,\n    \"f2\": 2350,\n    \"description\": \"ɪ\",\n    \"dataset\": \"reference\"\n  }, {\n    \"elicitation\": \"hair\",\n    \"f1\": 450,\n    \"f2\": 2100,\n    \"description\": \"eː\",\n    \"dataset\": \"reference\"\n  }, {\n    \"elicitation\": \"head\",\n    \"f1\": 470,\n    \"f2\": 2090,\n    \"description\": \"e\",\n    \"dataset\": \"reference\"\n  }, {\n    \"elicitation\": \"had\",\n    \"f1\": 690,\n    \"f2\": 1760,\n    \"description\": \"æ\",\n    \"dataset\": \"reference\"\n  }, {\n    \"elicitation\": \"hard\",\n    \"f1\": 760,\n    \"f2\": 1350,\n    \"description\": \"ɐː\",\n    \"dataset\": \"reference\"\n  }, {\n    \"elicitation\": \"hud\",\n    \"f1\": 740,\n    \"f2\": 1390,\n    \"description\": \"ɐ\",\n    \"dataset\": \"reference\"\n  }, {\n    \"elicitation\": \"hod\",\n    \"f1\": 580,\n    \"f2\": 1040,\n    \"description\": \"ɔ\",\n    \"dataset\": \"reference\"\n  }, {\n    \"elicitation\": \"horde\",\n    \"f1\": 440,\n    \"f2\": 850,\n    \"description\": \"oː\",\n    \"dataset\": \"reference\"\n  }, {\n    \"elicitation\": \"hood\",\n    \"f1\": 380,\n    \"f2\": 950,\n    \"description\": \"ʊ\",\n    \"dataset\": \"reference\"\n  }, {\n    \"elicitation\": \"who'd\",\n    \"f1\": 340,\n    \"f2\": 1800,\n    \"description\": \"ʉ\",\n    \"dataset\": \"reference\"\n  }, {\n    \"elicitation\": \"herd\",\n    \"f1\": 470,\n    \"f2\": 1640,\n    \"description\": \"ɜː\",\n    \"dataset\": \"reference\"\n  }],\n  \"Australian English 196?\": [{\n    \"elicitation\": \"heed\",\n    \"f1\": 300,\n    \"f2\": 2280,\n    \"description\": \"iː\",\n    \"dataset\": \"reference\"\n  }, {\n    \"elicitation\": \"hid\",\n    \"f1\": 365,\n    \"f2\": 2210,\n    \"description\": \"ɪ\",\n    \"dataset\": \"reference\"\n  }, {\n    \"elicitation\": \"hair\",\n    \"f1\": 440,\n    \"f2\": 2010,\n    \"description\": \"eː\",\n    \"dataset\": \"reference\"\n  }, {\n    \"elicitation\": \"head\",\n    \"f1\": 455,\n    \"f2\": 2090,\n    \"description\": \"e\",\n    \"dataset\": \"reference\"\n  }, {\n    \"elicitation\": \"had\",\n    \"f1\": 630,\n    \"f2\": 1880,\n    \"description\": \"æ\",\n    \"dataset\": \"reference\"\n  }, {\n    \"elicitation\": \"hard\",\n    \"f1\": 750,\n    \"f2\": 1370,\n    \"description\": \"ɐː\",\n    \"dataset\": \"reference\"\n  }, {\n    \"elicitation\": \"hud\",\n    \"f1\": 735,\n    \"f2\": 1410,\n    \"description\": \"ɐ\",\n    \"dataset\": \"reference\"\n  }, {\n    \"elicitation\": \"hod\",\n    \"f1\": 625,\n    \"f2\": 1060,\n    \"description\": \"ɔ\",\n    \"dataset\": \"reference\"\n  }, {\n    \"elicitation\": \"horde\",\n    \"f1\": 445,\n    \"f2\": 825,\n    \"description\": \"oː\",\n    \"dataset\": \"reference\"\n  }, {\n    \"elicitation\": \"hood\",\n    \"f1\": 400,\n    \"f2\": 910,\n    \"description\": \"ʊ\",\n    \"dataset\": \"reference\"\n  }, {\n    \"elicitation\": \"who'd\",\n    \"f1\": 350,\n    \"f2\": 1610,\n    \"description\": \"ʉ\",\n    \"dataset\": \"reference\"\n  }, {\n    \"elicitation\": \"herd\",\n    \"f1\": 470,\n    \"f2\": 1510,\n    \"description\": \"ɜː\",\n    \"dataset\": \"reference\"\n  }]\n};\n\n// const diphthongs = {\n//   \"Australian English 1991-1994\" : [\n//     {\"elicitation\" : \"hoyed\", \"f1\" : , \"f2\" : , \"description\" : \"oɪ\", \"dataset\" : \"reference\"},\n//     {\"elicitation\" : \"hide\", \"f1\" : , \"f2\" : , \"description\" : \"ɑɪ\", \"dataset\" : \"reference\"},\n//     {\"elicitation\" : \"hayed\", \"f1\" : , \"f2\" : , \"description\" : \"æɪ\", \"dataset\" : \"reference\"},\n//     {\"elicitation\" : \"hoed\", \"f1\" : , \"f2\" : , \"description\" : \"əʉ\", \"dataset\" : \"reference\"},\n//     {\"elicitation\" : \"how'd\", \"f1\" : , \"f2\" : , \"description\" : \"æɔ\", \"dataset\" : \"reference\"}\n//   ]\n// }\n\nconst elicitations = [\"heed\", \"hid\", \"head\", \"haired\", \"had\", \"who'd\", \"heard\", \"hud\", \"hard\", \"hood\", \"hoard\", \"hod\"];\nconst diphthongElicitations = [\"hoyed\", \"hide\", \"hayed\", \"hoed\", \"how'd\"];\nfunction reshapeUserData(userFormantValues) {\n  let userChartData = [];\n  for (let elicitation in userFormantValues) {\n    if (userFormantValues[elicitation][\"f1\"] && userFormantValues[elicitation][\"f2\"]) {\n      userChartData.push({\n        \"elicitation\": elicitation,\n        \"f1\": parseFloat(userFormantValues[elicitation][\"f1\"]),\n        \"f2\": parseFloat(userFormantValues[elicitation][\"f2\"]),\n        \"dataset\": \"user input\"\n      });\n    }\n  }\n  return userChartData;\n}\n\n// define maths components\nconst e = Math.exp(1);\nfunction antilog(n) {\n  let base = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : e;\n  if (base === e) return Math.exp(n);\n  return Math.pow(base, n);\n}\nfunction average(inputArray) {\n  return inputArray.reduce((a, b) => a + b, 0) / inputArray.length;\n}\nfunction standardDeviation(array) {\n  const n = array.length;\n  const mean = array.reduce((a, b) => a + b) / n;\n  return Math.sqrt(array.map(x => Math.pow(x - mean, 2)).reduce((a, b) => a + b) / n);\n}\nfunction normaliseFormantNearey1(formantN, allNFormants) {\n  return antilog(Math.log(formantN) - average(allNFormants.map(f => Math.log(f))));\n}\nfunction normaliseFormantNearey2(formantN, allFormants) {\n  return antilog(Math.log(formantN) - average(allFormants.map(f => Math.log(f))));\n}\nfunction normaliseFormantLobanov(formant, meanFormant, stdDevFormant) {\n  return (formant - meanFormant) / stdDevFormant;\n}\nfunction normaliseFormant(method, formantN, allNFormants, allFormants, meanNFormant, stdDevNFormant) {\n  switch (method) {\n    case \"Lobanov\":\n      return normaliseFormantLobanov(formantN, meanNFormant, stdDevNFormant);\n    case \"Nearey 1\":\n      return normaliseFormantNearey1(formantN, allNFormants);\n    case \"Nearey 2\":\n      return normaliseFormantNearey2(formantN, allFormants);\n  }\n}\nfunction normaliseDataset(dataset, method) {\n  if (dataset.length == 0) {\n    return dataset;\n  }\n  if (method == \"none\") {\n    return dataset;\n  }\n  const f1s = dataset.map(row => row[\"f1\"]);\n  const f2s = dataset.map(row => row[\"f2\"]);\n  const meanF1 = average(f1s);\n  const meanF2 = average(f2s);\n  let stdDevF1;\n  let stdDevF2;\n  if (method == \"Lobanov\") {\n    stdDevF1 = standardDeviation(f1s);\n    stdDevF2 = standardDeviation(f2s);\n  }\n  for (let i = 0; i < dataset.length; i++) {\n    dataset[i][\"normalisedF1\"] = normaliseFormant(method, dataset[i][\"f1\"], f1s, f1s.concat(f2s), meanF1, stdDevF1);\n    dataset[i][\"normalisedF2\"] = normaliseFormant(method, dataset[i][\"f2\"], f2s, f1s.concat(f2s), meanF2, stdDevF2);\n  }\n  return dataset;\n}\nfunction App() {\n  _s();\n  const [formantValues, setFormantValues] = useState(elicitations.reduce((o, key) => ({\n    ...o,\n    [key]: {\n      \"f1\": \"\",\n      \"f2\": \"\"\n    }\n  }), {}));\n  const [referenceDataset, setReferenceDataset] = useState(\"Australian English 1991-1994\");\n  const [normalisationMethod, setNormalisationMethod] = useState(\"none\");\n  function handleChange(elicitation, formant, value) {\n    console.log(\"Setting user input formant values\");\n    let updateObj = formantValues;\n    updateObj[elicitation][formant] = value;\n    setFormantValues(updateObj);\n  }\n  function handleNormalisationSelection(selectedNormalisationMethod) {\n    setNormalisationMethod(selectedNormalisationMethod);\n  }\n  function handleReferenceDataSelection(referenceDataset) {\n    setReferenceDataset(referenceDataset);\n  }\n\n  // .concat(normaliseDataset(reshapeUserData(formantValues), normalisationMethod))\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"visualisation-pane\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"visualisation-pane-content\",\n        children: /*#__PURE__*/_jsxDEV(ScatterPlot, {\n          data: normaliseDataset(chartData[referenceDataset], normalisationMethod).concat(normaliseDataset(reshapeUserData(formantValues), normalisationMethod)),\n          normalisationMethod: normalisationMethod\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"control-pane\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"control-pane-content\",\n        children: [/*#__PURE__*/_jsxDEV(NormalisationSelector, {\n          changeHandler: handleNormalisationSelection\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DatasetSelector, {\n          changeHandler: handleReferenceDataSelection\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormantForm, {\n          changeHandler: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 169,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"cmYbEoxw9D+15YYe7RShRfUENdE=\");\n_c = App;\nfunction NormalisationSelector(_ref) {\n  let {\n    changeHandler\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Form, {\n    className: \"dataset-selector\",\n    children: /*#__PURE__*/_jsxDEV(Form.Group, {\n      className: \"mb-3\",\n      controlId: \"formNormalisation\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Normalisation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n        \"aria-label\": \"Normalisation\",\n        onChange: e => changeHandler(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"none\",\n          children: \"none\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Lobanov\",\n          children: \"Lobanov\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Nearey 1\",\n          children: \"Nearey 1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Nearey 2\",\n          children: \"Nearey 2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 191,\n    columnNumber: 5\n  }, this);\n}\n_c2 = NormalisationSelector;\nfunction DatasetSelector(_ref2) {\n  let {\n    changeHandler\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(Form, {\n    className: \"dataset-selector\",\n    children: /*#__PURE__*/_jsxDEV(Form.Group, {\n      className: \"mb-3\",\n      controlId: \"formDataset\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Reference data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n        \"aria-label\": \"Normalisation\",\n        onChange: e => changeHandler(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"none\",\n          children: \"none\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Australian English 1991-1994\",\n          children: \"Australian English 1991-1994\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Australian English 196?\",\n          children: \"Australian English 196?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 209,\n    columnNumber: 5\n  }, this);\n}\n_c3 = DatasetSelector;\nfunction FormantForm(_ref3) {\n  let {\n    changeHandler\n  } = _ref3;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Your data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Accordion, {\n      className: \"formant-form\",\n      children: elicitations.map((e, i) => /*#__PURE__*/_jsxDEV(FormantInput, {\n        indexNumber: i,\n        elicitation: e,\n        formOnChange: changeHandler\n      }, e, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 38\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_c4 = FormantForm;\nfunction FormantInput(props) {\n  return /*#__PURE__*/_jsxDEV(Accordion.Item, {\n    eventKey: props.indexNumber,\n    children: [/*#__PURE__*/_jsxDEV(Accordion.Header, {\n      children: [\"\\\"\", props.elicitation, \"\\\" vowel\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Accordion.Body, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        as: Row,\n        className: \"mb-3 formant-input\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          column: true,\n          sm: 2,\n          children: \"F1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          sm: 10,\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"number\",\n            onChange: e => props.formOnChange(props.elicitation, \"f1\", e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        as: Row,\n        className: \"mb-3 formant-input\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          column: true,\n          sm: 2,\n          children: \"F2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          sm: 10,\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"number\",\n            onChange: e => props.formOnChange(props.elicitation, \"f2\", e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 239,\n    columnNumber: 5\n  }, this);\n}\n_c5 = FormantInput;\nexport default App;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"NormalisationSelector\");\n$RefreshReg$(_c3, \"DatasetSelector\");\n$RefreshReg$(_c4, \"FormantForm\");\n$RefreshReg$(_c5, \"FormantInput\");","map":{"version":3,"names":["useState","React","Accordion","Dropdown","DropdownButton","Form","Col","Row","ScatterPlot","jsxDEV","_jsxDEV","Fragment","_Fragment","chartData","elicitations","diphthongElicitations","reshapeUserData","userFormantValues","userChartData","elicitation","push","parseFloat","e","Math","exp","antilog","n","base","arguments","length","undefined","pow","average","inputArray","reduce","a","b","standardDeviation","array","mean","sqrt","map","x","normaliseFormantNearey1","formantN","allNFormants","log","f","normaliseFormantNearey2","allFormants","normaliseFormantLobanov","formant","meanFormant","stdDevFormant","normaliseFormant","method","meanNFormant","stdDevNFormant","normaliseDataset","dataset","f1s","row","f2s","meanF1","meanF2","stdDevF1","stdDevF2","i","concat","App","_s","formantValues","setFormantValues","o","key","referenceDataset","setReferenceDataset","normalisationMethod","setNormalisationMethod","handleChange","value","console","updateObj","handleNormalisationSelection","selectedNormalisationMethod","handleReferenceDataSelection","className","children","id","data","fileName","_jsxFileName","lineNumber","columnNumber","NormalisationSelector","changeHandler","DatasetSelector","FormantForm","_c","_ref","Group","controlId","Label","Select","onChange","target","_c2","_ref2","_c3","_ref3","FormantInput","indexNumber","formOnChange","_c4","props","Item","eventKey","Header","Body","as","column","sm","Control","type","_c5","$RefreshReg$"],"sources":["/Users/darcyroche/Documents/GitHub/map-your-vowels/src/App.js"],"sourcesContent":["import { useState, React} from 'react';\nimport Accordion from 'react-bootstrap/Accordion';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Form from 'react-bootstrap/Form';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport ScatterPlot from './Plot.js';\n\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst chartData = {\n  \"none\" : [],\n  \"Australian English 1991-1994\" : [\n    {\"elicitation\" : \"heed\", \"f1\" : 320, \"f2\" : 2360, \"description\" : \"iː\", \"dataset\" : \"reference\"},\n    {\"elicitation\" : \"hid\", \"f1\" : 330, \"f2\" : 2350, \"description\" : \"ɪ\", \"dataset\" : \"reference\"},\n    {\"elicitation\" : \"hair\", \"f1\" : 450, \"f2\" : 2100, \"description\" : \"eː\", \"dataset\" : \"reference\"},\n    {\"elicitation\" : \"head\", \"f1\" : 470, \"f2\" : 2090, \"description\" : \"e\", \"dataset\" : \"reference\"},\n    {\"elicitation\" : \"had\", \"f1\" : 690, \"f2\" : 1760, \"description\" : \"æ\", \"dataset\" : \"reference\"},\n    {\"elicitation\" : \"hard\", \"f1\" : 760, \"f2\" : 1350, \"description\" : \"ɐː\", \"dataset\" : \"reference\"},\n    {\"elicitation\" : \"hud\", \"f1\" : 740, \"f2\" : 1390, \"description\" : \"ɐ\", \"dataset\" : \"reference\"},\n    {\"elicitation\" : \"hod\", \"f1\" : 580, \"f2\" : 1040, \"description\" : \"ɔ\", \"dataset\" : \"reference\"},\n    {\"elicitation\" : \"horde\", \"f1\" : 440, \"f2\" : 850, \"description\" : \"oː\", \"dataset\" : \"reference\"},\n    {\"elicitation\" : \"hood\", \"f1\" : 380, \"f2\" : 950, \"description\" : \"ʊ\", \"dataset\" : \"reference\"},\n    {\"elicitation\" : \"who'd\", \"f1\" : 340, \"f2\" : 1800, \"description\" : \"ʉ\", \"dataset\" : \"reference\"},\n    {\"elicitation\" : \"herd\", \"f1\" : 470, \"f2\" : 1640, \"description\" : \"ɜː\", \"dataset\" : \"reference\"}\n  ],\n  \"Australian English 196?\" : [\n    {\"elicitation\" : \"heed\", \"f1\" : 300, \"f2\" : 2280, \"description\" : \"iː\", \"dataset\" : \"reference\"},\n    {\"elicitation\" : \"hid\", \"f1\" : 365, \"f2\" : 2210, \"description\" : \"ɪ\", \"dataset\" : \"reference\"},\n    {\"elicitation\" : \"hair\", \"f1\" : 440, \"f2\" : 2010, \"description\" : \"eː\", \"dataset\" : \"reference\"},\n    {\"elicitation\" : \"head\", \"f1\" : 455, \"f2\" : 2090, \"description\" : \"e\", \"dataset\" : \"reference\"},\n    {\"elicitation\" : \"had\", \"f1\" : 630, \"f2\" : 1880, \"description\" : \"æ\", \"dataset\" : \"reference\"},\n    {\"elicitation\" : \"hard\", \"f1\" : 750, \"f2\" : 1370, \"description\" : \"ɐː\", \"dataset\" : \"reference\"},\n    {\"elicitation\" : \"hud\", \"f1\" : 735, \"f2\" : 1410, \"description\" : \"ɐ\", \"dataset\" : \"reference\"},\n    {\"elicitation\" : \"hod\", \"f1\" : 625, \"f2\" : 1060, \"description\" : \"ɔ\", \"dataset\" : \"reference\"},\n    {\"elicitation\" : \"horde\", \"f1\" : 445, \"f2\" : 825, \"description\" : \"oː\", \"dataset\" : \"reference\"},\n    {\"elicitation\" : \"hood\", \"f1\" : 400, \"f2\" : 910, \"description\" : \"ʊ\", \"dataset\" : \"reference\"},\n    {\"elicitation\" : \"who'd\", \"f1\" : 350, \"f2\" : 1610, \"description\" : \"ʉ\", \"dataset\" : \"reference\"},\n    {\"elicitation\" : \"herd\", \"f1\" : 470, \"f2\" : 1510, \"description\" : \"ɜː\", \"dataset\" : \"reference\"}\n  ],\n}\n\n// const diphthongs = {\n//   \"Australian English 1991-1994\" : [\n//     {\"elicitation\" : \"hoyed\", \"f1\" : , \"f2\" : , \"description\" : \"oɪ\", \"dataset\" : \"reference\"},\n//     {\"elicitation\" : \"hide\", \"f1\" : , \"f2\" : , \"description\" : \"ɑɪ\", \"dataset\" : \"reference\"},\n//     {\"elicitation\" : \"hayed\", \"f1\" : , \"f2\" : , \"description\" : \"æɪ\", \"dataset\" : \"reference\"},\n//     {\"elicitation\" : \"hoed\", \"f1\" : , \"f2\" : , \"description\" : \"əʉ\", \"dataset\" : \"reference\"},\n//     {\"elicitation\" : \"how'd\", \"f1\" : , \"f2\" : , \"description\" : \"æɔ\", \"dataset\" : \"reference\"}\n//   ]\n// }\n\nconst elicitations = [\n  \"heed\", \"hid\", \"head\", \"haired\", \"had\", \"who'd\", \"heard\", \"hud\", \"hard\",\n  \"hood\", \"hoard\", \"hod\"\n]\n\nconst diphthongElicitations = [\n  \"hoyed\", \"hide\", \"hayed\", \"hoed\", \"how'd\"\n]\n\nfunction reshapeUserData(userFormantValues) {\n  let userChartData = [];\n  for (let elicitation in userFormantValues) {\n    if (userFormantValues[elicitation][\"f1\"] && userFormantValues[elicitation][\"f2\"]) {\n      userChartData.push({\n        \"elicitation\" : elicitation,\n        \"f1\" : parseFloat(userFormantValues[elicitation][\"f1\"]),\n        \"f2\" : parseFloat(userFormantValues[elicitation][\"f2\"]),\n        \"dataset\" : \"user input\"\n      });\n    }\n  }\n  return userChartData\n}\n\n// define maths components\nconst e = Math.exp(1)\n\nfunction antilog(n, base = e) {\n  if (base === e) return Math.exp(n);\n  return Math.pow(base, n);\n}\n\nfunction average(inputArray) {\n  return inputArray.reduce((a, b) => a + b, 0) / inputArray.length;\n}\n\nfunction standardDeviation (array) {\n  const n = array.length;\n  const mean = array.reduce((a, b) => a + b) / n;\n  return Math.sqrt(array.map(x => Math.pow(x - mean, 2)).reduce((a, b) => a + b) / n);\n}\n\nfunction normaliseFormantNearey1(formantN, allNFormants) {\n  return antilog(Math.log(formantN) - average(allNFormants.map(f => Math.log(f))));\n}\n\nfunction normaliseFormantNearey2(formantN, allFormants) {\n  return antilog(Math.log(formantN) - average(allFormants.map(f => Math.log(f))));\n}\n\nfunction normaliseFormantLobanov(formant, meanFormant, stdDevFormant) {\n  return (formant - meanFormant) / stdDevFormant;\n}\n\nfunction normaliseFormant(method, formantN, allNFormants, allFormants, meanNFormant, stdDevNFormant) {\n  switch (method) {\n    case \"Lobanov\":\n      return normaliseFormantLobanov(formantN, meanNFormant, stdDevNFormant);\n    case \"Nearey 1\":\n      return normaliseFormantNearey1(formantN, allNFormants);\n    case \"Nearey 2\":\n      return normaliseFormantNearey2(formantN, allFormants)\n  }\n}\n\nfunction normaliseDataset(dataset, method) {\n  if (dataset.length == 0) {\n    return dataset\n  }\n  if (method == \"none\") {\n    return dataset;\n  }\n  const f1s = dataset.map(row => row[\"f1\"]);\n  const f2s = dataset.map(row => row[\"f2\"]);\n  const meanF1 = average(f1s);\n  const meanF2 = average(f2s);\n  let stdDevF1;\n  let stdDevF2;\n  if (method == \"Lobanov\") {\n    stdDevF1 = standardDeviation(f1s);\n    stdDevF2 = standardDeviation(f2s);\n  }\n  for (let i = 0; i < dataset.length; i++) {\n    dataset[i][\"normalisedF1\"] = normaliseFormant(method, dataset[i][\"f1\"], f1s, f1s.concat(f2s), meanF1, stdDevF1);\n    dataset[i][\"normalisedF2\"] = normaliseFormant(method, dataset[i][\"f2\"], f2s, f1s.concat(f2s), meanF2, stdDevF2);\n  }\n  return dataset;\n}\n\nfunction App() {\n  const [formantValues, setFormantValues] = useState(\n    elicitations.reduce((o, key) => ({ ...o, [key]: {\"f1\" : \"\", \"f2\" : \"\"}}), {})\n  );\n  const [referenceDataset, setReferenceDataset] = useState(\"Australian English 1991-1994\");\n  const [normalisationMethod, setNormalisationMethod] = useState(\"none\");\n\n  function handleChange(elicitation, formant, value) {\n    console.log(\"Setting user input formant values\");\n    let updateObj = formantValues;\n    updateObj[elicitation][formant] = value;\n    setFormantValues(updateObj);\n  }\n\n  function handleNormalisationSelection(selectedNormalisationMethod) {\n    setNormalisationMethod(selectedNormalisationMethod);\n  }\n\n  function handleReferenceDataSelection(referenceDataset) {\n    setReferenceDataset(referenceDataset);\n  }\n\n  // .concat(normaliseDataset(reshapeUserData(formantValues), normalisationMethod))\n\n  return (\n    <div className=\"App\">\n      <div id=\"visualisation-pane\">\n        <div id=\"visualisation-pane-content\">\n          <ScatterPlot\n            data={normaliseDataset(chartData[referenceDataset], normalisationMethod).concat(normaliseDataset(reshapeUserData(formantValues), normalisationMethod))}\n            normalisationMethod={normalisationMethod}\n            />\n        </div>\n      </div>\n      <div className=\"control-pane\">\n        <div className=\"control-pane-content\">\n          <NormalisationSelector changeHandler={handleNormalisationSelection}/>\n          <DatasetSelector changeHandler={handleReferenceDataSelection}/>\n          <FormantForm changeHandler={handleChange}/>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction NormalisationSelector({ changeHandler }) {\n  return (\n    <Form className=\"dataset-selector\">\n      <Form.Group className=\"mb-3\" controlId=\"formNormalisation\">\n        <Form.Label>\n          Normalisation\n        </Form.Label>\n        <Form.Select aria-label=\"Normalisation\" onChange={e => changeHandler(e.target.value)}>\n          <option value=\"none\">none</option>\n          <option value=\"Lobanov\">Lobanov</option>\n          <option value=\"Nearey 1\">Nearey 1</option>\n          <option value=\"Nearey 2\">Nearey 2</option>\n        </Form.Select>\n      </Form.Group>\n    </Form>\n  );\n}\n\nfunction DatasetSelector({ changeHandler }) {\n  return (\n    <Form className=\"dataset-selector\">\n      <Form.Group className=\"mb-3\" controlId=\"formDataset\">\n        <Form.Label>\n          Reference data\n        </Form.Label>\n        <Form.Select aria-label=\"Normalisation\" onChange={e => changeHandler(e.target.value)}>\n          <option value=\"none\">none</option>\n          <option value=\"Australian English 1991-1994\">Australian English 1991-1994</option>\n          <option value=\"Australian English 196?\">Australian English 196?</option>\n        </Form.Select>\n      </Form.Group>\n    </Form>\n  );\n}\n\nfunction FormantForm({ changeHandler }) {\n  return (\n    <>\n      <h4>Your data</h4>\n      <Accordion className=\"formant-form\">\n        {\n          elicitations.map((e, i) => <FormantInput key={e} indexNumber={i} elicitation={e} formOnChange={changeHandler}/>)\n        }\n      </Accordion>\n    </>\n  );\n}\n\nfunction FormantInput(props) {\n  return (\n    <Accordion.Item eventKey={props.indexNumber}>\n      <Accordion.Header>\"{props.elicitation}\" vowel</Accordion.Header>\n      <Accordion.Body>\n        <Form.Group as={Row} className=\"mb-3 formant-input\">\n          <Form.Label column sm={2}>F1</Form.Label>\n          <Col sm={10}>\n            <Form.Control type=\"number\" onChange={e => props.formOnChange(props.elicitation, \"f1\", e.target.value)}/>\n          </Col>\n        </Form.Group>\n        <Form.Group as={Row} className=\"mb-3 formant-input\">\n          <Form.Label column sm={2}>F2</Form.Label>\n          <Col sm={10}>\n            <Form.Control type=\"number\" onChange={e => props.formOnChange(props.elicitation, \"f2\", e.target.value)}/>\n          </Col>\n        </Form.Group>\n      </Accordion.Body>\n    </Accordion.Item>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}